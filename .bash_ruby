#!/bin/bash

# .bash_ruby
# Lorin Ricker: set up Ruby environment & commands

shF="$RBY/.bash_ruby"
Ident="${shF}     # (LMR version 1.9 of 08/07/2012)"

if [ "$DEBUGMODE" = 1 ]; then
  echo "%login-I, ${Ident}"
fi

# =========================

# Default Ruby search path is PATH, but
# "$ ruby -S ..." forces use of RUBYPATH --
export RUBYPATH=~/bin:~/projects/ruby:~/projects
export  RUBYLIB=~/bin:~/projects/ruby:~/projects:~/.gem/ruby/1.9.1/bin
export     PATH=~/bin:~/projects/ruby:~/projects:~/.gem/ruby/1.9.1/bin:$PATH

# Set for latest version of Ruby (etc.; v1.8 and v1.9.1 installed) --
# may find:  a) /usr/bin/ruby -> /etc/alternatives/ruby -> /usr/bin/rubyX.X.X
#               plus one or more version-specific Ruby executables
#  or only:  b) /usr/bin/rubyX.X.X
RB="/usr/bin/ruby"
RUBY=$( ls --format=single-column $RB* | sort -r | head -n 1 )
if [ -f "$RUBY" ]; then
  RBV=${RUBY##$RB}  # strip path and "ruby" to get version#
  alias ruby="$RUBY"
  alias rubi="${RUBY} -I ~/projects/ruby"
  alias  gem="/usr/bin/gem${RBV}"
  alias  irb="/usr/bin/irb${RBV}"
  alias   ri="/usr/bin/ri${RBV}"
  alias rdoc="/usr/bin/rdoc${RBV}"
  deflogical "rlb" "/usr/lib/ruby/${RBV}/"
  echo "%${shF}-I-version, Ruby version is ${RBV}"
else
  echo "%${shF}-E-fnf, Ruby not installed (\"$RB\")"
fi

return 0  # don't: exit 0
