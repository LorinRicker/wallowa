Object
  •---Exception
        • fatal (used internally by Ruby)
        •---NoMemoryError
        •---ScriptError
              •---LoadError
              •---NotImplementedError
              •---SyntaxError
        •---SecurityError ¹
        •---SignalException
              •---Interrupt
        •---StandardError
              •---ArgumentError
              •---FiberError ²
              •---IndexError
                    •---KeyError ²
                    •---StopIteration ²
              •---IOError
                    •---EOFError
              •---LocalJumpError
              •---NameError
                    •---NoMethodError
              •---RangeError
                    •---FloatDomainError
              •---RegexpError
              •---RuntimeError
              •---SystemCallError ³
              •---ThreadError
              •---TypeError             Notes: ¹ Was a StandardError in Ruby 1.8
              •---ZeroDivisionError            ² New in Ruby 1.9
        •---SystemExit                         ³ System-dependent exceptions
        •---SystemStackError ¹                   (Errno::xxx)

...
begin                                      def method_name( args, ... )
  # statement(s)...                          # statement(s)...
rescue [ exception➀ ][ => e ]              rescue [ exception➀ ][ => e ]
  # Code to handle exception➀...             # Code to handle exception➀...
  pp e                                       pp e
  print e.backtrace.join( "\\n" )             print e.backtrace.join( "\\n" )
rescue [ exception➁ ][ => e ]              rescue [ exception➁ ][ => e ]
  # Code to handle exception➁...             # Code to handle exception➁...
else                                       else
  # If no exception occurs in the            # If no exception occurs in the
  # begin/end block, then this               # method block, then this code
  # code block is executed...                # block is executed...
ensure                                     ensure
  # Code to be executed no matter            # Code to be executed no matter
  # what happens in the begin/end            # what happens in the method
  # block: run if the block runs             # block: run if the block runs
  # to completion, or if it throws           # to completion, or if it throws
  # an exception...                          # an exception, or if the method
end                                          # executes a return statement...
                                         end
